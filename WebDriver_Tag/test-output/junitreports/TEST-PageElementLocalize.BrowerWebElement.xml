<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="PageElementLocalize.BrowerWebElement" tests="1" time="17.409" ignored="43" failures="0" timestamp="29 十一月 2017 05:07:19 GMT" skipped="0" hostname="N4A6CDPYHL8SNQG" errors="1">
  <testcase name="Mooc" time="17.409" classname="PageElementLocalize.BrowerWebElement">
    <error type="org.openqa.selenium.StaleElementReferenceException" message="stale element reference: element is not attached to the page document
  (Session info: chrome=62.0.3202.94)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: &#039;3.3.1&#039;, revision: &#039;5234b325d5&#039;, time: &#039;2017-03-10 09:10:29 +0000&#039;
System info: host: &#039;N4A6CDPYHL8SNQG&#039;, ip: &#039;192.168.231.72&#039;, os.name: &#039;Windows 7&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;6.1&#039;, java.version: &#039;1.8.0_131&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\ADMINI~1\AppData\Local\Temp\scoped_dir9068_11555}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=62.0.3202.94, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 2c20e0a835c7d69f31c8c4bff1617e3f
*** Element info: {Using=xpath, value=./a}">
      <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=62.0.3202.94)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.3.1', revision: '5234b325d5', time: '2017-03-10 09:10:29 +0000'
System info: host: 'N4A6CDPYHL8SNQG', ip: '192.168.231.72', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\ADMINI~1\AppData\Local\Temp\scoped_dir9068_11555}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=62.0.3202.94, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 2c20e0a835c7d69f31c8c4bff1617e3f
*** Element info: {Using=xpath, value=./a}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:638)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:274)
	at org.openqa.selenium.remote.RemoteWebElement.findElement(RemoteWebElement.java:177)
	at org.openqa.selenium.remote.RemoteWebElement.findElementByXPath(RemoteWebElement.java:250)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebElement.findElement(RemoteWebElement.java:173)
	at PageElementLocalize.BrowerWebElement.Mooc(BrowerWebElement.java:1054)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- Mooc -->
  <testcase name="LocateTableTr" classname="PageElementLocalize.TableElement">
    <skipped/>
  </testcase> <!-- LocateTableTr -->
  <testcase name="LocateTableCheckBox" classname="PageElementLocalize.TableElement">
    <skipped/>
  </testcase> <!-- LocateTableCheckBox -->
  <testcase name="LocateTable" classname="PageElementLocalize.TableElement">
    <skipped/>
  </testcase> <!-- LocateTable -->
  <testcase name="TagByID" classname="PageElementLocalize.LocalizeByTag">
    <skipped/>
  </testcase> <!-- TagByID -->
  <testcase name="TagBypartialLinkText" classname="PageElementLocalize.LocalizeByTag">
    <skipped/>
  </testcase> <!-- TagBypartialLinkText -->
  <testcase name="TagByLinkText" classname="PageElementLocalize.LocalizeByTag">
    <skipped/>
  </testcase> <!-- TagByLinkText -->
  <testcase name="TagByName" classname="PageElementLocalize.LocalizeByTag">
    <skipped/>
  </testcase> <!-- TagByName -->
  <testcase name="TagByXPath" classname="PageElementLocalize.LocalizeByTag">
    <skipped/>
  </testcase> <!-- TagByXPath -->
  <testcase name="JQueryLocalize" classname="PageElementLocalize.JQuery">
    <skipped/>
  </testcase> <!-- JQueryLocalize -->
  <testcase name="roverOnElement" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- roverOnElement -->
  <testcase name="testExplicitWaitZIDINGYI" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testExplicitWaitZIDINGYI -->
  <testcase name="BrowerNavigate" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- BrowerNavigate -->
  <testcase name="dragPapeElement" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- dragPapeElement -->
  <testcase name="getWebMsg" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- getWebMsg -->
  <testcase name="testExplicitWait" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testExplicitWait -->
  <testcase name="testHandleAlert" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testHandleAlert -->
  <testcase name="testHandleFrame" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testHandleFrame -->
  <testcase name="mouseClickAndRelease" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- mouseClickAndRelease -->
  <testcase name="identifyPopUpWindowByTitle" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- identifyPopUpWindowByTitle -->
  <testcase name="operateRadio" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- operateRadio -->
  <testcase name="operateWindowsProcess" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- operateWindowsProcess -->
  <testcase name="testHandleFrameByPageSource" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testHandleFrameByPageSource -->
  <testcase name="executeJavaScript" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- executeJavaScript -->
  <testcase name="testHandlePrompt" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testHandlePrompt -->
  <testcase name="getWebElementCssAttribute" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- getWebElementCssAttribute -->
  <testcase name="checkSelectText" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- checkSelectText -->
  <testcase name="testHandleIFrame" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testHandleIFrame -->
  <testcase name="operateMultipleOptionDropList" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- operateMultipleOptionDropList -->
  <testcase name="getWebElementAttribute" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- getWebElementAttribute -->
  <testcase name="identifyPopUpWindowByPageSource" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- identifyPopUpWindowByPageSource -->
  <testcase name="testIframe" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testIframe -->
  <testcase name="testCookie" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testCookie -->
  <testcase name="captureScreenInCurrentWindow" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- captureScreenInCurrentWindow -->
  <testcase name="isElementTextPresent" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- isElementTextPresent -->
  <testcase name="rightClickMouse" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- rightClickMouse -->
  <testcase name="testLink" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testLink -->
  <testcase name="clickKyes" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- clickKyes -->
  <testcase name="clearAndSendTextToInputBoxText" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- clearAndSendTextToInputBoxText -->
  <testcase name="XClick" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- XClick -->
  <testcase name="operateCheckBox" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- operateCheckBox -->
  <testcase name="operateBrower" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- operateBrower -->
  <testcase name="testImpilicWait" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- testImpilicWait -->
  <testcase name="TestIsElementPresent" classname="PageElementLocalize.BrowerWebElement">
    <skipped/>
  </testcase> <!-- TestIsElementPresent -->
</testsuite> <!-- PageElementLocalize.BrowerWebElement -->
